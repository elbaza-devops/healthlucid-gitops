---
# Source: microservice/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ai-server-sa
  labels:
    app.kubernetes.io/name: ai-server
    app.kubernetes.io/instance: ai-server
    app.kubernetes.io/version: 1.0.0
    app.kubernetes.io/managed-by: Helm
---
# Source: microservice/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ai-server-cm
  labels:
    app.kubernetes.io/name: ai-server
    app.kubernetes.io/instance: ai-server
    app.kubernetes.io/version: 1.0.0
    app.kubernetes.io/managed-by: Helm
data:
  BE_SERVER: "http://be-server.dev.svc.cluster.local:8080"
  REDIS_HOST: "redis-master"
  REDIS_PORT: "6379"
---
# Source: microservice/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ai-server
  namespace: prod
  labels:
    app.kubernetes.io/name: ai-server
    app.kubernetes.io/instance: ai-server
    app.kubernetes.io/version: 1.0.0
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 5050
      targetPort: 5050
  selector:
    app: ai-server
---
# Source: microservice/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-server
  namespace: prod
  labels:
    app.kubernetes.io/name: ai-server
    app.kubernetes.io/instance: ai-server
    app.kubernetes.io/version: 1.0.0
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ai-server
  template:
    metadata:
      labels:
        app: ai-server
    spec:
      serviceAccountName: ai-server-sa
      containers:
        - name: ai-server
          image: "180942010314.dkr.ecr.us-east-1.amazonaws.com/dev/ai-server:dev-e73bb58977"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5050
          livenessProbe:
            httpGet:
              path: /ai-services/v1/heartbeat
              port: 5050
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ai-services/v1/heartbeat
              port: 5050
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          envFrom:
            - configMapRef:
                name: ai-server-cm
---
# Source: microservice/templates/destinationrule.yaml
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: ai-server-dr
  namespace: prod
  labels:
    app.kubernetes.io/name: ai-server
    app.kubernetes.io/instance: ai-server
    app.kubernetes.io/version: 1.0.0
    app.kubernetes.io/managed-by: Helm
spec:
  host: "ai-server.prod.svc.cluster.local"
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
---
# Source: microservice/templates/peerauthentication.yaml
apiVersion: security.istio.io/v1
kind: PeerAuthentication
metadata:
  name: ai-server-pa
  namespace: prod
  labels:
    app.kubernetes.io/name: ai-server
    app.kubernetes.io/instance: ai-server
    app.kubernetes.io/version: 1.0.0
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: ai-server
      app.kubernetes.io/instance: ai-server
      app.kubernetes.io/version: 1.0.0
      app.kubernetes.io/managed-by: Helm
  mtls:
    mode: STRICT
  portLevelMtls: 
    "5051":
      mode: STRICT
---
# Source: microservice/templates/virtualservice.yaml
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: ai-server-vs
  labels:
    app.kubernetes.io/name: ai-server
    app.kubernetes.io/instance: ai-server
    app.kubernetes.io/version: 1.0.0
    app.kubernetes.io/managed-by: Helm
spec:
  hosts:
    - "ai-server-dev.healthlucid.com"
  gateways:
    - "hl-gateway"
  http:
    - match:
        - uri:
            prefix: /
      route:
        - destination:
            host: ai-server.prod.svc.cluster.local
            port:
              number: 5050
